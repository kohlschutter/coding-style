<?xml version="1.0"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  name="Kohlschutter Maven PMD Plugin Ruleset"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
    Da Rules
  </description>
  <rule ref="category/java/bestpractices.xml">
    <exclude name="AvoidReassigningParameters" />
    <exclude name="UnitTestShouldIncludeAssert" />
    <exclude name="UseVarargs" />
    <exclude name="JUnitUseExpected" />
    <exclude name="UnitTestAssertionsShouldIncludeMessage" />
    <exclude name="ForLoopVariableCount" />

    <!-- False positives in for-declaration -->
    <exclude name="OneDeclarationPerLine" />

    <!-- Too obvious; when we use it, it's in demo/test code -->
    <exclude name="AvoidPrintStackTrace" />
    <exclude name="SystemPrintln" />

    <exclude name="AccessorClassGeneration" />
    <exclude name="AccessorMethodGeneration" />

    <!-- Blocked on https://issues.apache.org/jira/browse/SUREFIRE-1909 -->
    <exclude name="JUnit5TestShouldBePackagePrivate" />

    <!-- https://github.com/pmd/pmd/issues/4618 and https://github.com/pmd/pmd/issues/4617 -->
    <exclude name="UnusedAssignment" /><!-- FIXME: Fix upcoming; already works with PMD 7 branch ck/dev -->
  </rule>
  <rule
    ref="category/java/bestpractices.xml/UnitTestContainsTooManyAsserts">
    <properties>
      <property name="maximumAsserts" value="20" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml">
    <exclude name="UselessParentheses" />
    <exclude name="OnlyOneReturn" />
    <exclude name="ConfusingTernary" />
    <exclude name="UnnecessaryLocalBeforeReturn" />
    <exclude name="CommentDefaultAccessModifier" />
    <exclude name="AtLeastOneConstructor" />
    <exclude name="ShortVariable" />
    <exclude name="EmptyMethodInAbstractClassShouldBeAbstract" />
    <exclude name="MethodArgumentCouldBeFinal" />
    <exclude name="LocalVariableCouldBeFinal" />
    <exclude name="AvoidUsingNativeCode" />
    <exclude name="UselessQualifiedThis" />
    <exclude name="UnnecessaryConstructor" />
    <exclude name="EmptyControlStatement" />

    <!-- Fully qualified names sometimes make code more readable -->
    <exclude name="UnnecessaryFullyQualifiedName" />

    <!-- Some returns may make the code more readable -->
    <exclude name="UnnecessaryReturn" />

    <!-- Only makes sense if you're targeting Java 9+ -->
    <!-- https://github.com/pmd/pmd/issues/4619 -->
    <exclude name="UseDiamondOperator" />

    <!-- https://github.com/pmd/pmd/issues/4613 -->
    <exclude name="UnnecessaryImport" />

    <!-- https://github.com/pmd/pmd/issues/4620 -->
    <exclude name="UnnecessaryCast" />

    <!-- erroneously ignores the fact that a method in the assignment can
    throw an exception -->
    <exclude name="PrematureDeclaration" /> <!-- FIXME: Fixed in PMD 7 -->
  </rule>

  <!-- jUnit 5 adds several static imports -->
  <rule ref="category/java/codestyle.xml/TooManyStaticImports">
    <properties>
      <property name="maximumStaticImports" value="12" />
    </properties>
  </rule>

  <rule ref="category/java/design.xml/ExcessiveImports">
    <properties>
      <property name="minimum" value="50" />
    </properties>
  </rule>

  <rule ref="category/java/codestyle.xml/ClassNamingConventions">
    <properties>
      <property name="utilityClassPattern"
        value="[A-Z][a-zA-Z0-9]*" />
    </properties>
  </rule>
  <rule
    ref="category/java/codestyle.xml/UseUnderscoresInNumericLiterals">
    <properties>
      <property name="acceptableDecimalLength" value="6" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LongVariable">
    <properties>
      <property name="minimum" value="40" />
    </properties>
  </rule>

  <rule ref="category/java/design.xml">
    <exclude name="CollapsibleIfStatements" />
    <exclude name="LawOfDemeter" />
    <exclude name="SignatureDeclareThrowsException" />
    <exclude name="TooManyMethods" />
    <exclude name="DataClass" />
    <exclude name="AvoidCatchingGenericException" />
    <exclude name="AvoidRethrowingException" />
    <exclude name="UseUtilityClass" />
    <exclude name="UseObjectForClearerAPI" />
    <exclude name="GodClass" />
    <exclude name="LoosePackageCoupling" />
    <exclude name="AvoidUncheckedExceptionsInSignatures" />
    <exclude name="SimplifyBooleanReturns" />
  </rule>
  <rule ref="category/java/design.xml/CognitiveComplexity">
    <properties>
      <property name="reportLevel" value="21" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
    <properties>
      <property name="problemDepth" value="6" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/TooManyFields">
    <properties>
      <property name="maxfields" value="25" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/CyclomaticComplexity">
    <properties>
      <property name="classReportLevel" value="100" />
      <property name="methodReportLevel" value="20" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/NPathComplexity">
    <properties>
      <property name="reportLevel" value="2000" />
    </properties>
  </rule>

  <rule ref="category/java/errorprone.xml">
    <exclude name="AssignmentInOperand" />
    <exclude name="NullAssignment" />
    <exclude name="TestClassWithoutTestCases" />
    <exclude name="AvoidCatchingNPE" />
    <exclude name="NonStaticInitializer" />
    <exclude name="SingleMethodSingleton" />
    <exclude name="SingletonClassReturningNewInstance" />
    <exclude name="MissingStaticMethodInNonInstantiatableClass" />
    <exclude name="AvoidDuplicateLiterals" />
    <exclude name="AvoidLiteralsInIfCondition" />

    <!-- handled by the compiler already; ignores @SuppressWarnings("resource") -->
    <exclude name="CloseResource" />
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
    <properties>
      <property name="allowCommentedBlocks" value="true" />
    </properties>
  </rule>

  <rule ref="category/java/multithreading.xml">
    <exclude name="AvoidUsingVolatile" />
    <exclude name="AvoidSynchronizedAtMethodLevel" />
    <exclude name="UseConcurrentHashMap" />
    <exclude name="DoNotUseThreads" />
    <exclude name="AvoidSynchronizedStatement" /><!-- To be solved with JEP 491 -->
  </rule>

  <rule ref="category/java/performance.xml">
    <exclude name="AvoidFileStream" />
    <exclude name="AvoidInstantiatingObjectsInLoops" />
    <exclude name="UseStringBufferForStringAppends" />

    <!-- Premature optimization -->
    <exclude name="RedundantFieldInitializer" />
    <exclude name="InsufficientStringBufferDeclaration" />
    <exclude name="ConsecutiveAppendsShouldReuse" />
  </rule>
  <rule
    ref="category/java/performance.xml/TooFewBranchesForSwitch">
    <properties>
      <property name="minimumNumberCaseForASwitch" value="2" />
    </properties>
  </rule>

  <rule ref="category/java/security.xml" />

  <rule ref="category/java/documentation.xml">
    <exclude name="CommentRequired" />
    <exclude name="UncommentedEmptyConstructor" />
    <exclude name="UncommentedEmptyMethodBody" />
  </rule>
  <rule ref="category/java/documentation.xml/CommentSize">
    <properties>
      <property name="maxLines" value="100" />
      <property name="maxLineLength" value="120" />
    </properties>
  </rule>
</ruleset>
